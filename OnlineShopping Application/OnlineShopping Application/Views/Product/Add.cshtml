@using System.Drawing.Imaging
@model OnlineShopping_Application.Models.Product

@{
    ViewBag.Title = "Add";
}
<br/><br/>

<div class="container body-content">
    <div class="row">
        <div class="col-md-1"></div>
        
    @using (Html.BeginForm("Add", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-6">
            <h3>Add a Product Detail !</h3>
            <div class="form-horizontal">


                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Price, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoryId, ViewBag.categoryList as SelectList, "-- Select Semester --", new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save this Product" class="btn btn-default btn-success"/>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-5">
            <div class="form-group">
                
                    <div class="col-md-10">
                        <img id="blah" src="~/Image/Default/NoImage.jpg" alt="your image" width="300" height="300" />
                        <input type="file" name="ImageFile" required=""
                               onchange="document.getElementById('blah').src = window.URL.createObjectURL(this.files[0])"
                               oninvalid="this.setCustomValidity('An image is required')"
                               oninput="setCustomValidity('')">

                        @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                    </div>
                
            </div>
        </div>

    }
        </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    }
